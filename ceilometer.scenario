# This file can be used directly by 'phd', see 'build-all.sh' in this
# directory for how it can be invoked.  The only requirement is a list
# of nodes you'd like it to modify.
#
# The scope of each command-block is controlled by the preceeding
# 'target' line. 
#
# - target=all
#   The commands are executed on evey node provided
#
# - target=local
#   The commands are executed from the node hosting phd. When not
#   using phd, they should be run from some other independant host
#   (such as the puppet master)
#
# - target=$PHD_ENV_nodes{N}
#   The commands are executed on the Nth node provided.
#   For example, to run on only the first node would be target=$PHD_ENV_nodes1
#
# Tasks to be performed at this step include:

#################################
# Scenario Requirements Section #
#################################
= REQUIREMENTS =
nodes: 1

= VARIABLES =

PHD_VAR_deployment

######################
# Deployment Scripts #
######################
= SCRIPTS =

target=all
....
yum install -y openstack-ceilometer-api openstack-ceilometer-central   openstack-ceilometer-collector openstack-ceilometer-common  openstack-ceilometer-alarm python-ceilometer python-ceilometerclient
....

target=all
....
openstack-config --set /etc/ceilometer/ceilometer.conf keystone_authtoken auth_host vip-keystone
openstack-config --set /etc/ceilometer/ceilometer.conf keystone_authtoken auth_port 35357
openstack-config --set /etc/ceilometer/ceilometer.conf keystone_authtoken auth_protocol http
openstack-config --set /etc/ceilometer/ceilometer.conf keystone_authtoken admin_tenant_name services
openstack-config --set /etc/ceilometer/ceilometer.conf keystone_authtoken admin_user ceilometer
openstack-config --set /etc/ceilometer/ceilometer.conf keystone_authtoken admin_password ceilometertest

if [ $PHD_VAR_deployment = collapsed ]; then
    openstack-config --set /etc/ceilometer/ceilometer.conf DEFAULT memcache_servers  rhos6-node1:11211,rhos6-node2:11211,rhos6-node3:11211
    openstack-config --set /etc/ceilometer/ceilometer.conf DEFAULT rabbit_hosts  rhos6-node1:11211,rhos6-node2:11211,rhos6-node3:11211
else
    openstack-config --set /etc/ceilometer/ceilometer.conf DEFAULT memcache_servers  rhos6-memcache1:11211,rhos6-memcache2:11211,rhos6-memcache3:11211
    openstack-config --set /etc/ceilometer/ceilometer.conf DEFAULT rabbit_hosts rhos6-rabbitmq1:11211,rhos6-rabbitmq2:11211,rhos6-rabbitmq3:11211
fi
openstack-config --set /etc/ceilometer/ceilometer.conf DEFAULT rabbit_ha_queues true

openstack-config --set /etc/ceilometer/ceilometer.conf publisher_rpc metering_secret ceilometersecret

openstack-config --set /etc/ceilometer/ceilometer.conf service_credentials os_auth_url http://vip-keystone:5000/v2.0
openstack-config --set /etc/ceilometer/ceilometer.conf service_credentials os_username ceilometer
openstack-config --set /etc/ceilometer/ceilometer.conf service_credentials os_tenant_name services
openstack-config --set /etc/ceilometer/ceilometer.conf service_credentials os_password ceilometertest

if [ $PHD_VAR_deployment = collapsed ]; then
    openstack-config  --set /etc/ceilometer/ceilometer.conf database connection     mongodb://rhos6-node1,rhos6-node2,rhos6-node3:27017/ceilometer?replicaSet=ceilometer
else
    openstack-config  --set /etc/ceilometer/ceilometer.conf database connection     mongodb://rhos6-mongodb1,rhos6-mongodb2,rhos6-mongodb3:27017/ceilometer?replicaSet=ceilometer
fi
openstack-config --set /etc/ceilometer/ceilometer.conf database max_retries -1

# keep last 5 days data only (value is in secs). Don't set to retain all data indefinetely.
openstack-config --set  /etc/ceilometer/ceilometer.conf database time_to_live 432000

openstack-config --set  /etc/ceilometer/ceilometer.conf api host $(ip addr show dev eth1 scope global | grep dynamic| sed -e 's#.*inet ##g' -e 's#/.*##g')
....

target=$PHD_ENV_nodes1
....
pcs resource create ceilometer-central systemd:openstack-ceilometer-central 
pcs resource create ceilometer-collector systemd:openstack-ceilometer-collector --clone interleave=true
pcs resource create ceilometer-api systemd:openstack-ceilometer-api --clone interleave=true
pcs resource create ceilometer-delay Delay startdelay=10 --clone interleave=true
pcs resource create ceilometer-alarm-evaluator systemd:openstack-ceilometer-alarm-evaluator --clone interleave=true
pcs resource create ceilometer-alarm-notifier systemd:openstack-ceilometer-alarm-notifier --clone interleave=true
pcs resource create ceilometer-notification systemd:openstack-ceilometer-notification  --clone interleave=true

pcs constraint order start ceilometer-central then ceilometer-collector-clone
pcs constraint order start ceilometer-collector-clone then ceilometer-api-clone
pcs constraint colocation add ceilometer-api-clone with ceilometer-collector-clone 
pcs constraint order start ceilometer-api-clone then ceilometer-delay-clone
pcs constraint colocation add ceilometer-delay-clone with ceilometer-api-clone
pcs constraint order start ceilometer-delay-clone then ceilometer-alarm-evaluator-clone
pcs constraint colocation add ceilometer-alarm-evaluator-clone with ceilometer-delay-clone
pcs constraint order start ceilometer-alarm-evaluator-clone then ceilometer-alarm-notifier-clone
pcs constraint colocation add ceilometer-alarm-notifier-clone with ceilometer-alarm-evaluator-clone
pcs constraint order start ceilometer-alarm-notifier-clone then ceilometer-notification-clone
pcs constraint colocation add ceilometer-notification-clone with ceilometer-alarm-notifier-clone

if [ $PHD_VAR_deployment = collapsed ]; then
    pcs constraint order start mongodb-clone then ceilometer-central
    pcs constraint order start keystone-clone then ceilometer-central
fi
....
